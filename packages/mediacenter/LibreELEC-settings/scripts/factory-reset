#!/bin/sh
################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2014 Stephan Raue (stephan@openelec.tv)
#      Copyright (C) 2016-     Team LibreELEC
#
#  OpenELEC is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  OpenELEC is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

get_hddinfo() {
  for arg in $(cat /proc/cmdline); do
    case $arg in
      disk=*)
        local _disk="${arg#*=}"
        case $_disk in
          LABEL=*)
            label="${_disk#*=}"
            part=`blkid -L $label`
            ;;
          UUID=*)
            uuid="${_disk#*=}"
            part=`blkid -U $uuid`
            ;;
          /*)
            part=$_disk
            ;;
        esac
        ;;
    esac
  done
  case $part in
    /dev/mmcblk*)
      disk="${part%p2}"
      ;;
    *)
      disk="${part%2}"
      ;;
  esac
}

if [ -f /storage/.cache/reset_oe ] ; then
  # hard reset
  rm -f /storage/.cache/reset_oe
  get_hddinfo
  if [ ! -z $part ] ; then
    echo "hard resetting..."
    # get storage partition start
    part_start=$(parted -s -m $disk unit b print |grep -v ^/dev |grep -v BYT | grep ^2: |  cut -f2 -d ":")
    # failed to get partition start offset ?
    if [ -n "$part_start" ] ; then
      umount $part

      parted -s -m $disk rm 2 2>&1 >/dev/null
      parted -s -m $disk unit b mkpart primary $part_start 100% 2>&1 >/dev/null
      mke2fs -F -t ext4 -m 0 $part 2>&1 >/dev/null
      if [ ! -z $label ] ; then
        tune2fs -U random -L $label $part 2>&1 >/dev/null
      fi
      if [ ! -z $uuid ] ; then
        tune2fs -U $uuid $part 2>&1 >/dev/null
      fi
    fi
    echo "done"
    sleep 5
  fi
elif [ -f /storage/.cache/reset_xbmc ] ; then
  # soft reset
  rm -f /storage/.cache/reset_xbmc
  get_hddinfo
  if [ ! -z $part ] ; then
    echo "soft resetting..."
    rm -rf /storage/.??* 2>&1 >/dev/null
    echo "done"
    sleep 5
  fi
fi
sync
reboot -f

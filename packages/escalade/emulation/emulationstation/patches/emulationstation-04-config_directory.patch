diff --git a/CMakeLists.txt b/CMakeLists.txt
index 784c2d0..52f8e42 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -60,6 +60,11 @@ if(DEFINED BCMHOST)
     add_definitions(-D_RPI_)
 endif()
 
+option(XdgOsx "XdgOsx" OFF)
+if(XdgOsx)
+    add_definitions(-DUSE_XDG_OSX)
+endif()
+
 #-------------------------------------------------------------------------------
 
 if(MSVC)
diff --git a/es-app/src/SystemData.cpp b/es-app/src/SystemData.cpp
index 5e2b9b4c..7c28d79 100644
--- a/es-app/src/SystemData.cpp
+++ b/es-app/src/SystemData.cpp
@@ -382,7 +382,7 @@ void SystemData::deleteSystems()
 
 std::string SystemData::getConfigPath(bool forWrite)
 {
-	fs::path path = getHomePath() + "/.emulationstation/es_systems.cfg";
+	fs::path path = getConfigDirectory() + "/es_systems.cfg";
 	if(forWrite || fs::exists(path))
 		return path.generic_string();
 
@@ -397,7 +397,7 @@ std::string SystemData::getGamelistPath(bool forWrite) const
 	if(fs::exists(filePath))
 		return filePath.generic_string();
 
-	filePath = getHomePath() + "/.emulationstation/gamelists/" + mName + "/gamelist.xml";
+	filePath = getConfigDirectory() + "/gamelists/" + mName + "/gamelist.xml";
 	if(forWrite) // make sure the directory exists if we're going to write to it, or crashes will happen
 		fs::create_directories(filePath.parent_path());
 	if(forWrite || fs::exists(filePath))
diff --git a/es-app/src/main.cpp b/es-app/src/main.cpp
index 393f199..cd99825 100644
--- a/es-app/src/main.cpp
+++ b/es-app/src/main.cpp
@@ -107,12 +107,12 @@ bool parseArgs(int argc, char* argv[], unsigned int* width, unsigned int* height
 bool verifyHomeFolderExists()
 {
 	//make sure the config directory exists
-	std::string home = getHomePath();
-	std::string configDir = home + "/.emulationstation";
+	std::string configDir = getConfigDirectory();
+    std::cout << "ConfigPath " << configDir << std::endl;
 	if(!fs::exists(configDir))
 	{
 		std::cout << "Creating config directory \"" << configDir << "\"\n";
-		fs::create_directory(configDir);
+		fs::create_directories(configDir);
 		if(!fs::exists(configDir))
 		{
 			std::cerr << "Config directory could not be created!\n";
diff --git a/es-app/src/scrapers/Scraper.cpp b/es-app/src/scrapers/Scraper.cpp
index c827a47..1df06f1 100644
--- a/es-app/src/scrapers/Scraper.cpp
+++ b/es-app/src/scrapers/Scraper.cpp
@@ -273,7 +273,7 @@ std::string getSaveAsPath(const ScraperSearchParams& params, const std::string&
 	const std::string subdirectory = params.system->getName();
 	const std::string name = params.game->getPath().stem().generic_string() + "-" + suffix;
 
-	std::string path = getHomePath() + "/.emulationstation/downloaded_images/";
+	std::string path = getConfigDirectory() + "/downloaded_images/";
 
 	if(!boost::filesystem::exists(path))
 		boost::filesystem::create_directory(path);
diff --git a/es-core/src/InputManager.cpp b/es-core/src/InputManager.cpp
index 3bd26b8..5d467e9 100644
--- a/es-core/src/InputManager.cpp
+++ b/es-core/src/InputManager.cpp
@@ -331,8 +331,8 @@ void InputManager::writeDeviceConfig(InputConfig* config)
 
 std::string InputManager::getConfigPath()
 {
-	std::string path = getHomePath();
-	path += "/.emulationstation/es_input.cfg";
+	std::string path = getConfigDirectory();
+	path += "/es_input.cfg";
 	return path;
 }
 
diff --git a/es-core/src/Log.cpp b/es-core/src/Log.cpp
index 643aef1..3906cb4 100644
--- a/es-core/src/Log.cpp
+++ b/es-core/src/Log.cpp
@@ -14,8 +14,8 @@ LogLevel Log::getReportingLevel()
 
 std::string Log::getLogPath()
 {
-	std::string home = getHomePath();
-	return home + "/.emulationstation/es_log.txt";
+	std::string home = getConfigDirectory();
+	return home + "/es_log.txt";
 }
 
 void Log::setReportingLevel(LogLevel level)
diff --git a/es-core/src/Settings.cpp b/es-core/src/Settings.cpp
index 779ee71..c874760 100644
--- a/es-core/src/Settings.cpp
+++ b/es-core/src/Settings.cpp
@@ -91,7 +91,7 @@ void saveMap(pugi::xml_document& doc, std::map<K, V>& map, const char* type)
 
 void Settings::saveFile()
 {
-	const std::string path = getHomePath() + "/.emulationstation/es_settings.cfg";
+	const std::string path = getConfigDirectory() + "/es_settings.cfg";
 
 	pugi::xml_document doc;
 
@@ -112,7 +112,7 @@ void Settings::saveFile()
 
 void Settings::loadFile()
 {
-	const std::string path = getHomePath() + "/.emulationstation/es_settings.cfg";
+	const std::string path = getConfigDirectory() + "/es_settings.cfg";
 
 	if(!boost::filesystem::exists(path))
 		return;
diff --git a/es-core/src/ThemeData.cpp b/es-core/src/ThemeData.cpp
index fce8662..a81dae8 100644
--- a/es-core/src/ThemeData.cpp
+++ b/es-core/src/ThemeData.cpp
@@ -362,7 +362,7 @@ const std::shared_ptr<ThemeData>& ThemeData::getDefault()
 	{
 		theme = std::shared_ptr<ThemeData>(new ThemeData());
 
-		const std::string path = getHomePath() + "/.emulationstation/es_theme_default.xml";
+		const std::string path = getConfigDirectory() + "/es_theme_default.xml";
 		if(fs::exists(path))
 		{
 			try
@@ -432,7 +432,7 @@ std::map<std::string, ThemeSet> ThemeData::getThemeSets()
 	static const size_t pathCount = 2;
 	fs::path paths[pathCount] = { 
 		"/etc/emulationstation/themes", 
-		getHomePath() + "/.emulationstation/themes" 
+		getConfigDirectory() + "/themes"
 	};
 
 	fs::directory_iterator end;
diff --git a/es-core/src/platform.cpp b/es-core/src/platform.cpp
index e1663a5..d076819 100644
--- a/es-core/src/platform.cpp
+++ b/es-core/src/platform.cpp
@@ -7,6 +7,33 @@
 #include <codecvt>
 #endif
 
+std::string getConfigDirectory()
+{
+    boost::filesystem::path path;
+#ifdef _WIN32
+#include <windows.h>
+#include <shlobj.h>
+    CHAR my_documents[MAX_PATH];
+    SHGetFolderPath(NULL, CSIDL_PRESONAL, NULL, SHGFP_TYPE_CURRENT, my_documents);
+    path = boost::filesystem::path(my_documents) / "EmulationStation";
+#elif __APPLE__ && !defined(USE_XDG_OSX)
+    const char* homePath = getenv("HOME");
+    path = boost::filesystem::path(homePath);
+    path /= "Library" / "Application Support" / "org.emulationstation.EmulationStation" ;
+#else
+    const char* envXdgConfig = getenv("XDG_CONFIG_HOME");
+    if(envXdgConfig){
+        path = boost::filesystem::path(envXdgConfig);
+    } else {
+        const char* homePath = getenv("HOME");
+        path = boost::filesystem::path(homePath);
+        path /= boost::filesystem::path(".config");
+    }
+    path /= boost::filesystem::path("emulationstation");
+#endif
+    return path.generic_string();
+}
+
 std::string getHomePath()
 {
 	std::string homePath;
diff --git a/es-core/src/platform.h b/es-core/src/platform.h
index a0571b3..cfa20eb 100644
--- a/es-core/src/platform.h
+++ b/es-core/src/platform.h
@@ -18,6 +18,8 @@
 #include <string>
 
 std::string getHomePath();
+std::string getConfigDirectory();
+std::string getDataDirectory();
 
 int runShutdownCommand(); // shut down the system (returns 0 if successful)
 int runRestartCommand(); // restart the system (returns 0 if successful)
